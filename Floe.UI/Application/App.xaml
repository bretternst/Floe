<Application x:Class="Floe.UI.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	        xmlns:mwt="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
			 xmlns:local="clr-namespace:Floe.UI">
    <Application.Resources>
		<local:App x:Key="App"/>
		<local:BrushToColorConverter x:Key="brushToColor"/>
		<local:BrushAlphaConverter x:Key="opacityConverter"/>
		<local:MultiplyConverter x:Key="multiplyConverter"/>
		<SolidColorBrush x:Key="winBG" Color="{Binding Source={x:Static local:App.Settings}, Path=Current.Colors.WindowBackground}"/>
		<SolidColorBrush x:Key="winFG" Color="{Binding Source={x:Static local:App.Settings}, Path=Current.Colors.WindowForeground}"/>
		<SolidColorBrush x:Key="winFGx0" Color="{Binding Source={x:Static local:App.Settings}, Path=Current.Colors.WindowForeground}" Opacity="0"/>
		<SolidColorBrush x:Key="winFGx20" Color="{Binding Source={x:Static local:App.Settings}, Path=Current.Colors.WindowForeground}" Opacity="0.2"/>
		<SolidColorBrush x:Key="winFGx40" Color="{Binding Source={x:Static local:App.Settings}, Path=Current.Colors.WindowForeground}" Opacity="0.4"/>
		<SolidColorBrush x:Key="winFGx80" Color="{Binding Source={x:Static local:App.Settings}, Path=Current.Colors.WindowForeground}" Opacity="0.8"/>
		<SolidColorBrush x:Key="alertBrush" Color="{Binding Source={x:Static local:App.Settings}, Path=Current.Colors.Alert}"/>
		<SolidColorBrush x:Key="noiseBrush" Color="{Binding Source={x:Static local:App.Settings}, Path=Current.Colors.NoiseActivity}"/>
		<SolidColorBrush x:Key="chatBrush" Color="{Binding Source={x:Static local:App.Settings}, Path=Current.Colors.ChatActivity}"/>
		<SolidColorBrush x:Key="editBG" Color="{Binding Source={x:Static local:App.Settings}, Path=Current.Colors.EditBackground}"/>
		<SolidColorBrush x:Key="ctrlBG" Color="{Binding Source={x:Static local:App.Settings}, Path=Current.Colors.Background}"/>
		<SolidColorBrush x:Key="highlightBrush" Color="{Binding Source={x:Static local:App.Settings}, Path=Current.Colors.Highlight}"/>
		<LinearGradientBrush x:Key="winFGdownGrad" StartPoint="0,0" EndPoint="0,1" Opacity="0.2">
			<GradientStop Offset="0" Color="{Binding Source={x:Static local:App.Settings}, Path=Current.Colors.WindowForeground}"/>
			<GradientStop Offset="1" Color="{Binding Source={x:Static local:App.Settings}, Path=Current.Colors.WindowBackground}"/>
		</LinearGradientBrush>

		<Style x:Key="uiButtonStyle" TargetType="Button">
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="Foreground" Value="{StaticResource winFG}"/>
			<Setter Property="BorderBrush" Value="Transparent"/>
			<Setter Property="VerticalAlignment" Value="Center"/>
			<Setter Property="Focusable" Value="False"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="Button">
						<Border Background="{TemplateBinding Background}" BorderThickness="1"
								BorderBrush="{TemplateBinding BorderBrush}"
								Padding="{TemplateBinding Padding}">
							<ContentPresenter VerticalAlignment="Center"/>
						</Border>
						<ControlTemplate.Triggers>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsMouseOver" Value="True"/>
									<Condition Property="IsEnabled" Value="True"/>
								</MultiTrigger.Conditions>
								<Setter Property="BorderBrush" Value="{StaticResource winFG}"/>
								<Setter Property="Background" Value="{StaticResource winFGx40}"/>
							</MultiTrigger>
							<Trigger Property="IsEnabled" Value="False">
								<Setter Property="Opacity" Value="0.4"/>
							</Trigger>
							<Trigger Property="IsPressed" Value="True">
								<Setter Property="Background" Value="{StaticResource winFGx80}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style x:Key="uiRepeatButtonStyle" TargetType="RepeatButton">
			<Setter Property="Foreground" Value="{StaticResource winFG}"/>
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="BorderBrush" Value="Transparent"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="RepeatButton">
						<Border Background="{TemplateBinding Background}" BorderThickness="1"
								BorderBrush="{TemplateBinding BorderBrush}"
								Padding="{TemplateBinding Padding}">
							<ContentPresenter VerticalAlignment="Center"/>
						</Border>
						<ControlTemplate.Triggers>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsMouseOver" Value="True"/>
									<Condition Property="IsEnabled" Value="True"/>
								</MultiTrigger.Conditions>
								<Setter Property="BorderBrush" Value="{StaticResource winFG}"/>
								<Setter Property="Background" Value="{StaticResource winFGx40}"/>
							</MultiTrigger>
							<Trigger Property="IsEnabled" Value="False">
								<Setter Property="Opacity" Value="0.4"/>
							</Trigger>
							<Trigger Property="IsPressed" Value="True">
								<Setter Property="Background" Value="{StaticResource winFGx80}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style x:Key="uiMenuButtonStyle" TargetType="MenuItem">
			<Setter Property="OverridesDefaultStyle" Value="True"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="MenuItem">
						<Border Background="Transparent" BorderThickness="1"
								BorderBrush="Transparent" x:Name="border1">
							<Grid>
								<ContentPresenter ContentSource="Header" Margin="{TemplateBinding Padding}" VerticalAlignment="Center"/>
								<Popup Name="Popup" Placement="Bottom"
									   IsOpen="{TemplateBinding IsSubmenuOpen}"
									   AllowsTransparency="True"
									   Focusable="False"
									   PopupAnimation="Fade">
									<mwt:SystemDropShadowChrome Color="#00FFFFFF" Name="Shdw">
										<ContentControl IsTabStop="False" Template="{DynamicResource {ComponentResourceKey TypeInTargetAssembly=FrameworkElement, ResourceId=SubmenuContent}}" Name="SubMenuBorder">
											<ScrollViewer CanContentScroll="True" Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly=FrameworkElement, ResourceId=MenuScrollViewer}}">
												<ItemsPresenter Margin="2,2,2,2" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="True" />
											</ScrollViewer>
										</ContentControl>
									</mwt:SystemDropShadowChrome>
								</Popup>
							</Grid>
						</Border>
						<ControlTemplate.Triggers>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsMouseOver" Value="True"/>
									<Condition Property="IsEnabled" Value="True"/>
								</MultiTrigger.Conditions>
								<Setter Property="BorderBrush" TargetName="border1" Value="{StaticResource winFG}"/>
								<Setter Property="Background" TargetName="border1" Value="{StaticResource winFGx40}"/>
							</MultiTrigger>
							<Trigger Property="IsEnabled" Value="False">
								<Setter Property="Opacity" Value="0.4"/>
							</Trigger>
							<Trigger Property="IsPressed" Value="True">
								<Setter Property="Background" TargetName="border1" Value="{StaticResource winFGx80}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style x:Key="uiCheckBoxStyle" TargetType="CheckBox">
			<Setter Property="Foreground" Value="{StaticResource winFG}"/>
			<Setter Property="VerticalAlignment" Value="Bottom"/>
			<Setter Property="FontFamily" Value="Segoe UI"/>
			<Setter Property="FontSize" Value="11"/>
		</Style>
		
		<Style x:Key="uiLabelStyle" TargetType="Label">
			<Setter Property="Foreground" Value="{StaticResource winFG}"/>
		</Style>

		<Style x:Key="uiTextBlockStyle" TargetType="TextBlock">
			<Setter Property="Foreground" Value="{StaticResource winFG}"/>
		</Style>

		<Style x:Key="uiTextBoxStyle" TargetType="TextBox">
			<Setter Property="Foreground" Value="{Binding Source={x:Static local:App.Settings}, Path=Current.Colors.Edit, Mode=OneWay}"/>
			<Setter Property="Background" Value="{Binding Source={x:Static local:App.Settings}, Path=Current.Colors.EditBackground, Mode=OneWay}"/>
			<Setter Property="FontFamily" Value="{Binding Source={x:Static local:App.Settings}, Path=Current.Formatting.FontFamily, Mode=OneWay}"/>
			<Setter Property="FontSize" Value="{Binding Source={x:Static local:App.Settings}, Path=Current.Formatting.FontSize, Mode=OneWay}"/>
			<Setter Property="FontStyle" Value="{Binding Source={x:Static local:App.Settings}, Path=Current.Formatting.FontStyle, Mode=OneWay}"/>
			<Setter Property="FontWeight" Value="{Binding Source={x:Static local:App.Settings}, Path=Current.Formatting.FontWeight, Mode=OneWay}"/>
			<Setter Property="Padding" Value="1,2,2,2"/>
			<Setter Property="Margin" Value="0"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="BorderBrush" Value="{StaticResource winFG}"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="TextBoxBase">
						<Border CornerRadius="4" Background="{TemplateBinding Background}"
								BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
							<ScrollViewer Margin="0" x:Name="PART_ContentHost"/>
						</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Geometry x:Key="closeButtonGeometry">M0,0 L8,8 M0,8 L8,0</Geometry>
		<Geometry x:Key="voiceIndicatorGeometry">M 9,3 A 6,6 0 0 1 9,11 M 13,0 A 7,10 0 0 1 13,14 M 6,6 L 6,8</Geometry>
		<Geometry x:Key="muteIndicatorGeometry">M 4,12 L 17,0</Geometry>
		<Style x:Key="uiCloseButtonPathStyle" TargetType="Path">
			<Setter Property="Margin" Value="2"/>
			<Setter Property="Data" Value="{StaticResource closeButtonGeometry}"/>
			<Setter Property="Stroke" Value="{StaticResource winFG}"/>
			<Setter Property="StrokeThickness" Value="2"/>
			<Setter Property="StrokeStartLineCap" Value="Round"/>
			<Setter Property="StrokeEndLineCap" Value="Round"/>
			<Setter Property="Stretch" Value="Uniform"/>
			<Setter Property="VerticalAlignment" Value="Top"/>
			<Setter Property="HorizontalAlignment" Value="Center"/>
		</Style>
		<local:BrushSaturationConverter x:Key="modifySaturation"/>
	</Application.Resources>
</Application>
